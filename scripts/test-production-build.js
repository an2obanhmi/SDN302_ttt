const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Testing Production Build...\n');

try {
  // 1. Clean previous build
  console.log('1Ô∏è‚É£  Cleaning previous build...');
  if (fs.existsSync('.next')) {
    if (process.platform === 'win32') {
      execSync('rmdir /s /q .next', { stdio: 'inherit' });
    } else {
      execSync('rm -rf .next', { stdio: 'inherit' });
    }
  }
  console.log('‚úÖ Cleaned previous build\n');

  // 2. Install dependencies
  console.log('2Ô∏è‚É£  Installing dependencies...');
  execSync('npm install', { stdio: 'inherit' });
  console.log('‚úÖ Dependencies installed\n');

  // 3. Run TypeScript check
  console.log('3Ô∏è‚É£  Running TypeScript check...');
  execSync('npx tsc --noEmit', { stdio: 'inherit' });
  console.log('‚úÖ TypeScript check passed\n');

  // 4. Run linting
  console.log('4Ô∏è‚É£  Running linting...');
  execSync('npm run lint', { stdio: 'inherit' });
  console.log('‚úÖ Linting passed\n');

  // 5. Build for production
  console.log('5Ô∏è‚É£  Building for production...');
  execSync('npm run build', { stdio: 'inherit' });
  console.log('‚úÖ Production build successful\n');

  // 6. Check build output
  console.log('6Ô∏è‚É£  Checking build output...');
  if (fs.existsSync('.next')) {
    console.log('‚úÖ Build directory created');
    // Kh√¥ng ki·ªÉm tra static-pages/server-pages v√¨ Next 14 c√≥ th·ªÉ kh√¥ng t·∫°o th∆∞ m·ª•c n√†y
  } else {
    throw new Error('Build directory not found');
  }

  console.log('\nüéâ Production build test completed successfully!');
  console.log('‚úÖ Ready for deployment to Vercel');
  
  // 7. Display build summary
  console.log('\nüìä Build Summary:');
  console.log('- TypeScript: ‚úÖ Passed');
  console.log('- Linting: ‚úÖ Passed');
  console.log('- Build: ‚úÖ Successful');
  console.log('- Build Directory: ‚úÖ .next exists');
  
  console.log('\nüöÄ Next steps:');
  console.log('1. Push code to GitHub');
  console.log('2. Connect repository to Vercel');
  console.log('3. Set environment variables in Vercel dashboard');
  console.log('4. Deploy!');

} catch (error) {
  console.error('\n‚ùå Production build test failed:');
  console.error(error.message);
  process.exit(1);
} 